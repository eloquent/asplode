var search_data = {
    'index': {
        'searchIndex': ["eloquent","eloquent\\asplode","eloquent\\asplode\\error","eloquent\\asplode\\exception","eloquent\\asplode\\handlerstack","eloquent\\asplode\\asplode","eloquent\\asplode\\errorhandler","eloquent\\asplode\\errorhandlerinterface","eloquent\\asplode\\error\\abstracterrorexception","eloquent\\asplode\\error\\errorexception","eloquent\\asplode\\error\\errorexceptioninterface","eloquent\\asplode\\error\\fatalerrorexception","eloquent\\asplode\\error\\fatalerrorexceptioninterface","eloquent\\asplode\\error\\nonfatalerrorexceptioninterface","eloquent\\asplode\\exception\\alreadyinstalledexception","eloquent\\asplode\\exception\\asplodeexceptioninterface","eloquent\\asplode\\exception\\errorhandlingconfigurationexception","eloquent\\asplode\\exception\\notinstalledexception","eloquent\\asplode\\fatalerrorhandler","eloquent\\asplode\\fatalerrorhandlerinterface","eloquent\\asplode\\handlerstack\\abstracthandlerstack","eloquent\\asplode\\handlerstack\\errorhandlerstack","eloquent\\asplode\\handlerstack\\exceptionhandlerstack","eloquent\\asplode\\handlerstack\\handlerstackinterface","eloquent\\asplode\\asplode::install","eloquent\\asplode\\asplode::installerrorhandler","eloquent\\asplode\\asplode::installfatalhandler","eloquent\\asplode\\asplode::assertcompatiblehandler","eloquent\\asplode\\errorhandler::__construct","eloquent\\asplode\\errorhandler::stack","eloquent\\asplode\\errorhandler::setfallbackhandler","eloquent\\asplode\\errorhandler::fallbackhandler","eloquent\\asplode\\errorhandler::install","eloquent\\asplode\\errorhandler::uninstall","eloquent\\asplode\\errorhandler::isinstalled","eloquent\\asplode\\errorhandler::handle","eloquent\\asplode\\errorhandler::__invoke","eloquent\\asplode\\errorhandlerinterface::setfallbackhandler","eloquent\\asplode\\errorhandlerinterface::fallbackhandler","eloquent\\asplode\\errorhandlerinterface::install","eloquent\\asplode\\errorhandlerinterface::uninstall","eloquent\\asplode\\errorhandlerinterface::isinstalled","eloquent\\asplode\\errorhandlerinterface::handle","eloquent\\asplode\\error\\abstracterrorexception::__construct","eloquent\\asplode\\exception\\alreadyinstalledexception::__construct","eloquent\\asplode\\exception\\errorhandlingconfigurationexception::__construct","eloquent\\asplode\\exception\\notinstalledexception::__construct","eloquent\\asplode\\fatalerrorhandler::__construct","eloquent\\asplode\\fatalerrorhandler::stack","eloquent\\asplode\\fatalerrorhandler::install","eloquent\\asplode\\fatalerrorhandler::uninstall","eloquent\\asplode\\fatalerrorhandler::isinstalled","eloquent\\asplode\\fatalerrorhandler::handle","eloquent\\asplode\\fatalerrorhandler::__invoke","eloquent\\asplode\\fatalerrorhandlerinterface::install","eloquent\\asplode\\fatalerrorhandlerinterface::uninstall","eloquent\\asplode\\fatalerrorhandlerinterface::isinstalled","eloquent\\asplode\\fatalerrorhandlerinterface::handle","eloquent\\asplode\\handlerstack\\abstracthandlerstack::__construct","eloquent\\asplode\\handlerstack\\abstracthandlerstack::handler","eloquent\\asplode\\handlerstack\\abstracthandlerstack::handlerstack","eloquent\\asplode\\handlerstack\\abstracthandlerstack::pushall","eloquent\\asplode\\handlerstack\\abstracthandlerstack::clear","eloquent\\asplode\\handlerstack\\abstracthandlerstack::restore","eloquent\\asplode\\handlerstack\\abstracthandlerstack::executewith","eloquent\\asplode\\handlerstack\\errorhandlerstack::push","eloquent\\asplode\\handlerstack\\errorhandlerstack::pop","eloquent\\asplode\\handlerstack\\exceptionhandlerstack::push","eloquent\\asplode\\handlerstack\\exceptionhandlerstack::pop","eloquent\\asplode\\handlerstack\\handlerstackinterface::handler","eloquent\\asplode\\handlerstack\\handlerstackinterface::handlerstack","eloquent\\asplode\\handlerstack\\handlerstackinterface::push","eloquent\\asplode\\handlerstack\\handlerstackinterface::pushall","eloquent\\asplode\\handlerstack\\handlerstackinterface::pop","eloquent\\asplode\\handlerstack\\handlerstackinterface::clear","eloquent\\asplode\\handlerstack\\handlerstackinterface::restore","eloquent\\asplode\\handlerstack\\handlerstackinterface::executewith"],
        'info': [["Eloquent","","Eloquent.html","","",3],["Eloquent\\Asplode","","Eloquent\/Asplode.html","","",3],["Eloquent\\Asplode\\Error","","Eloquent\/Asplode\/Error.html","","",3],["Eloquent\\Asplode\\Exception","","Eloquent\/Asplode\/Exception.html","","",3],["Eloquent\\Asplode\\HandlerStack","","Eloquent\/Asplode\/HandlerStack.html","","",3],["Asplode","Eloquent\\Asplode","Eloquent\/Asplode\/Asplode.html","","Implements static convenience methods for use with",1],["ErrorHandler","Eloquent\\Asplode","Eloquent\/Asplode\/ErrorHandler.html","","The standard Asplode error handler.",1],["ErrorHandlerInterface","Eloquent\\Asplode","Eloquent\/Asplode\/ErrorHandlerInterface.html","","The interface implemented by Asplode error handlers.",1],["AbstractErrorException","Eloquent\\Asplode\\Error","Eloquent\/Asplode\/Error\/AbstractErrorException.html"," < ErrorException","An abstract base class for implementing extensions",1],["ErrorException","Eloquent\\Asplode\\Error","Eloquent\/Asplode\/Error\/ErrorException.html"," < AbstractErrorException","Represents a non-fatal error by extending the native",1],["ErrorExceptionInterface","Eloquent\\Asplode\\Error","Eloquent\/Asplode\/Error\/ErrorExceptionInterface.html","","Interface used to identify all error exceptions.",1],["FatalErrorException","Eloquent\\Asplode\\Error","Eloquent\/Asplode\/Error\/FatalErrorException.html"," < AbstractErrorException","Represents a fatal error by extending the native error",1],["FatalErrorExceptionInterface","Eloquent\\Asplode\\Error","Eloquent\/Asplode\/Error\/FatalErrorExceptionInterface.html","","Interface used to identify fatal error exceptions.",1],["NonFatalErrorExceptionInterface","Eloquent\\Asplode\\Error","Eloquent\/Asplode\/Error\/NonFatalErrorExceptionInterface.html","","Interface used to identify non-fatal error exceptions.",1],["AlreadyInstalledException","Eloquent\\Asplode\\Exception","Eloquent\/Asplode\/Exception\/AlreadyInstalledException.html"," < Exception","This Asplode instance has already been installed.",1],["AsplodeExceptionInterface","Eloquent\\Asplode\\Exception","Eloquent\/Asplode\/Exception\/AsplodeExceptionInterface.html","","Interface use to identify all Asplode-related exceptions,",1],["ErrorHandlingConfigurationException","Eloquent\\Asplode\\Exception","Eloquent\/Asplode\/Exception\/ErrorHandlingConfigurationException.html"," < Exception","PHP's error handling is incorrectly configured.",1],["NotInstalledException","Eloquent\\Asplode\\Exception","Eloquent\/Asplode\/Exception\/NotInstalledException.html"," < Exception","This Asplode instance has not been installed.",1],["FatalErrorHandler","Eloquent\\Asplode","Eloquent\/Asplode\/FatalErrorHandler.html","","The standard Asplode fatal error handler.",1],["FatalErrorHandlerInterface","Eloquent\\Asplode","Eloquent\/Asplode\/FatalErrorHandlerInterface.html","","The interface implemented by fatal error handlers.",1],["AbstractHandlerStack","Eloquent\\Asplode\\HandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html","","An abstract base class for implementing handler stacks.",1],["ErrorHandlerStack","Eloquent\\Asplode\\HandlerStack","Eloquent\/Asplode\/HandlerStack\/ErrorHandlerStack.html"," < AbstractHandlerStack","Manages the PHP error handler stack.",1],["ExceptionHandlerStack","Eloquent\\Asplode\\HandlerStack","Eloquent\/Asplode\/HandlerStack\/ExceptionHandlerStack.html"," < AbstractHandlerStack","Manages the PHP exception handler stack.",1],["HandlerStackInterface","Eloquent\\Asplode\\HandlerStack","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html","","The interface implemented by handler stacks.",1],["Asplode::install","Eloquent\\Asplode\\Asplode","Eloquent\/Asplode\/Asplode.html#method_install","(<abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Installs a new error handler, and a new fatal error",2],["Asplode::installErrorHandler","Eloquent\\Asplode\\Asplode","Eloquent\/Asplode\/Asplode.html#method_installErrorHandler","(<abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Installs a new error handler.",2],["Asplode::installFatalHandler","Eloquent\\Asplode\\Asplode","Eloquent\/Asplode\/Asplode.html#method_installFatalHandler","(<abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Installs a new fatal error handler.",2],["Asplode::assertCompatibleHandler","Eloquent\\Asplode\\Asplode","Eloquent\/Asplode\/Asplode.html#method_assertCompatibleHandler","(<abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Asserts that an error handling is configured in a way",2],["ErrorHandler::__construct","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method___construct","(<a href=\"Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html\"><abbr title=\"Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface\">HandlerStackInterface<\/abbr><\/a> $stack = null, <abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Construct a new error handler.",2],["ErrorHandler::stack","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method_stack","()","Get the error handler stack.",2],["ErrorHandler::setFallbackHandler","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method_setFallbackHandler","(<abbr title=\"Eloquent\\Asplode\\callable\">callable<\/abbr>|null $fallbackHandler = null)","Set an error handler to use as a fallback for errors",2],["ErrorHandler::fallbackHandler","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method_fallbackHandler","()","Get the error handler used as a fallback for errors",2],["ErrorHandler::install","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method_install","()","Installs this error handler.",2],["ErrorHandler::uninstall","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method_uninstall","()","Uninstalls this error handler.",2],["ErrorHandler::isInstalled","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method_isInstalled","()","Returns true if this error handler is the top-most",2],["ErrorHandler::handle","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method_handle","(integer $severity, string $message, string $filename, integer $lineno)","Handles a PHP error.",2],["ErrorHandler::__invoke","Eloquent\\Asplode\\ErrorHandler","Eloquent\/Asplode\/ErrorHandler.html#method___invoke","(integer $severity, string $message, string $filename, integer $lineno)","Handles a PHP error.",2],["ErrorHandlerInterface::setFallbackHandler","Eloquent\\Asplode\\ErrorHandlerInterface","Eloquent\/Asplode\/ErrorHandlerInterface.html#method_setFallbackHandler","(<abbr title=\"Eloquent\\Asplode\\callable\">callable<\/abbr>|null $fallbackHandler = null)","Set an error handler to use as a fallback for errors",2],["ErrorHandlerInterface::fallbackHandler","Eloquent\\Asplode\\ErrorHandlerInterface","Eloquent\/Asplode\/ErrorHandlerInterface.html#method_fallbackHandler","()","Get the error handler used as a fallback for errors",2],["ErrorHandlerInterface::install","Eloquent\\Asplode\\ErrorHandlerInterface","Eloquent\/Asplode\/ErrorHandlerInterface.html#method_install","()","Installs this error handler.",2],["ErrorHandlerInterface::uninstall","Eloquent\\Asplode\\ErrorHandlerInterface","Eloquent\/Asplode\/ErrorHandlerInterface.html#method_uninstall","()","Uninstalls this error handler.",2],["ErrorHandlerInterface::isInstalled","Eloquent\\Asplode\\ErrorHandlerInterface","Eloquent\/Asplode\/ErrorHandlerInterface.html#method_isInstalled","()","Returns true if this error handler is the top-most",2],["ErrorHandlerInterface::handle","Eloquent\\Asplode\\ErrorHandlerInterface","Eloquent\/Asplode\/ErrorHandlerInterface.html#method_handle","(integer $severity, string $message, string $filename, integer $lineno)","Handles a PHP error.",2],["AbstractErrorException::__construct","Eloquent\\Asplode\\Error\\AbstractErrorException","Eloquent\/Asplode\/Error\/AbstractErrorException.html#method___construct","(string $message, integer $severity, string $path, integer $lineNumber, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","Construct a new error exception.",2],["AlreadyInstalledException::__construct","Eloquent\\Asplode\\Exception\\AlreadyInstalledException","Eloquent\/Asplode\/Exception\/AlreadyInstalledException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","Construct a new already installed exception.",2],["ErrorHandlingConfigurationException::__construct","Eloquent\\Asplode\\Exception\\ErrorHandlingConfigurationException","Eloquent\/Asplode\/Exception\/ErrorHandlingConfigurationException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","Construct a new error handling configuration exception.",2],["NotInstalledException::__construct","Eloquent\\Asplode\\Exception\\NotInstalledException","Eloquent\/Asplode\/Exception\/NotInstalledException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","Construct a new not installed exception.",2],["FatalErrorHandler::__construct","Eloquent\\Asplode\\FatalErrorHandler","Eloquent\/Asplode\/FatalErrorHandler.html#method___construct","(<a href=\"Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html\"><abbr title=\"Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface\">HandlerStackInterface<\/abbr><\/a> $stack = null, <abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Construct a new fatal error handler.",2],["FatalErrorHandler::stack","Eloquent\\Asplode\\FatalErrorHandler","Eloquent\/Asplode\/FatalErrorHandler.html#method_stack","()","Get the exception handler stack.",2],["FatalErrorHandler::install","Eloquent\\Asplode\\FatalErrorHandler","Eloquent\/Asplode\/FatalErrorHandler.html#method_install","()","Installs this fatal error handler.",2],["FatalErrorHandler::uninstall","Eloquent\\Asplode\\FatalErrorHandler","Eloquent\/Asplode\/FatalErrorHandler.html#method_uninstall","()","Uninstalls this fatal error handler.",2],["FatalErrorHandler::isInstalled","Eloquent\\Asplode\\FatalErrorHandler","Eloquent\/Asplode\/FatalErrorHandler.html#method_isInstalled","()","Returns true if this fatal error handler is installed.",2],["FatalErrorHandler::handle","Eloquent\\Asplode\\FatalErrorHandler","Eloquent\/Asplode\/FatalErrorHandler.html#method_handle","()","Handles PHP shutdown, and produces exceptions for any",2],["FatalErrorHandler::__invoke","Eloquent\\Asplode\\FatalErrorHandler","Eloquent\/Asplode\/FatalErrorHandler.html#method___invoke","()","Handles PHP shutdown, and produces exceptions for any",2],["FatalErrorHandlerInterface::install","Eloquent\\Asplode\\FatalErrorHandlerInterface","Eloquent\/Asplode\/FatalErrorHandlerInterface.html#method_install","()","Installs this fatal error handler.",2],["FatalErrorHandlerInterface::uninstall","Eloquent\\Asplode\\FatalErrorHandlerInterface","Eloquent\/Asplode\/FatalErrorHandlerInterface.html#method_uninstall","()","Uninstalls this fatal error handler.",2],["FatalErrorHandlerInterface::isInstalled","Eloquent\\Asplode\\FatalErrorHandlerInterface","Eloquent\/Asplode\/FatalErrorHandlerInterface.html#method_isInstalled","()","Returns true if this fatal error handler is installed.",2],["FatalErrorHandlerInterface::handle","Eloquent\\Asplode\\FatalErrorHandlerInterface","Eloquent\/Asplode\/FatalErrorHandlerInterface.html#method_handle","()","Handles PHP shutdown, and produces exceptions for any",2],["AbstractHandlerStack::__construct","Eloquent\\Asplode\\HandlerStack\\AbstractHandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html#method___construct","(<abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Construct a new handler stack.",2],["AbstractHandlerStack::handler","Eloquent\\Asplode\\HandlerStack\\AbstractHandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html#method_handler","()","Gets the current handler without removing it from the",2],["AbstractHandlerStack::handlerStack","Eloquent\\Asplode\\HandlerStack\\AbstractHandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html#method_handlerStack","()","Gets the current handler stack without changing the",2],["AbstractHandlerStack::pushAll","Eloquent\\Asplode\\HandlerStack\\AbstractHandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html#method_pushAll","(array $handlers)","Pushes multiple handlers on to the stack.",2],["AbstractHandlerStack::clear","Eloquent\\Asplode\\HandlerStack\\AbstractHandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html#method_clear","()","Removes all handlers from the stack.",2],["AbstractHandlerStack::restore","Eloquent\\Asplode\\HandlerStack\\AbstractHandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html#method_restore","(array $handlers)","Restores a stack of handlers.",2],["AbstractHandlerStack::executeWith","Eloquent\\Asplode\\HandlerStack\\AbstractHandlerStack","Eloquent\/Asplode\/HandlerStack\/AbstractHandlerStack.html#method_executeWith","(<abbr title=\"Eloquent\\Asplode\\HandlerStack\\callable\">callable<\/abbr> $callable, <abbr title=\"Eloquent\\Asplode\\HandlerStack\\callable\">callable<\/abbr>|null $handler = null)","Temporarily bypass the current handler stack and execute",2],["ErrorHandlerStack::push","Eloquent\\Asplode\\HandlerStack\\ErrorHandlerStack","Eloquent\/Asplode\/HandlerStack\/ErrorHandlerStack.html#method_push","(<abbr title=\"Eloquent\\Asplode\\HandlerStack\\callable\">callable<\/abbr> $handler)","Pushes a handler on to the stack.",2],["ErrorHandlerStack::pop","Eloquent\\Asplode\\HandlerStack\\ErrorHandlerStack","Eloquent\/Asplode\/HandlerStack\/ErrorHandlerStack.html#method_pop","()","Pops a handler off the stack.",2],["ExceptionHandlerStack::push","Eloquent\\Asplode\\HandlerStack\\ExceptionHandlerStack","Eloquent\/Asplode\/HandlerStack\/ExceptionHandlerStack.html#method_push","(<abbr title=\"Eloquent\\Asplode\\HandlerStack\\callable\">callable<\/abbr> $handler)","Pushes a handler on to the stack.",2],["ExceptionHandlerStack::pop","Eloquent\\Asplode\\HandlerStack\\ExceptionHandlerStack","Eloquent\/Asplode\/HandlerStack\/ExceptionHandlerStack.html#method_pop","()","Pops a handler off the stack.",2],["HandlerStackInterface::handler","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_handler","()","Gets the current handler without removing it from the",2],["HandlerStackInterface::handlerStack","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_handlerStack","()","Gets the current handler stack without changing the",2],["HandlerStackInterface::push","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_push","(<abbr title=\"Eloquent\\Asplode\\HandlerStack\\callable\">callable<\/abbr> $handler)","Pushes a handler on to the stack.",2],["HandlerStackInterface::pushAll","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_pushAll","(array $handlers)","Pushes multiple handlers on to the stack.",2],["HandlerStackInterface::pop","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_pop","()","Pops a handler off the stack.",2],["HandlerStackInterface::clear","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_clear","()","Removes all handlers from the stack.",2],["HandlerStackInterface::restore","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_restore","(array $handlers)","Restores a stack of handlers.",2],["HandlerStackInterface::executeWith","Eloquent\\Asplode\\HandlerStack\\HandlerStackInterface","Eloquent\/Asplode\/HandlerStack\/HandlerStackInterface.html#method_executeWith","(<abbr title=\"Eloquent\\Asplode\\HandlerStack\\callable\">callable<\/abbr> $callable, <abbr title=\"Eloquent\\Asplode\\HandlerStack\\callable\">callable<\/abbr>|null $handler = null)","Temporarily bypass the current handler stack and execute",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']